{"version":3,"sources":["components/Form.js","components/AddCard.js","components/List.js","components/AddList.js","App.js","index.js"],"names":["Form","props","useState","title","setTitle","className","onChange","event","target","value","onClick","addList","setShowForm","AddCard","showCard","setShowCard","setValue","style","marginTop","addCard","List","id","nanoid","console","log","cards","setCards","map","card","index","Draggable","provided","draggableProps","dragHandleProps","ref","innerRef","key","placeholder","AddList","lists","setLists","showForm","droppableId","Fragment","droppableProps","red","list","App","ReactDOM","render","document","getElementById"],"mappings":"6TAGe,SAASA,EAAKC,GAAO,MAERC,mBAAS,IAFD,mBAE3BC,EAF2B,KAEpBC,EAFoB,KAmBlC,OACE,sBAAKC,UAAU,SAAf,UACE,uBAAOC,SAbX,SAA2BC,GACzBH,EAASG,EAAMC,OAAOC,QAYgBA,MAAON,IAC3C,sBAAKE,UAAU,YAAf,UACE,wBAAQK,QAXd,WACMP,GACFF,EAAMU,QAAQR,GAEhBC,EAAS,KAOL,sBACA,wBAAQM,QApBd,SAAqBH,GACnBN,EAAMW,aAAY,IAmBd,uB,MCzBO,SAASC,EAAQZ,GAAQ,IAAD,EACLC,oBAAS,GADJ,mBAC9BY,EAD8B,KACpBC,EADoB,OAEXb,mBAAS,IAFE,mBAE9BO,EAF8B,KAEvBO,EAFuB,KAiBrC,OACE,mCACGF,EACC,sBAAKT,UAAU,SAAf,UACE,uBAAOY,MAAO,CAAEC,UAAW,QAAUT,MAAOA,EAAOH,SAf3D,SAAqBC,GACnBS,EAAST,EAAMC,OAAOC,UAehB,sBAAKJ,UAAU,YAAf,UACE,wBAAQK,QAblB,WACMD,IACFR,EAAMkB,QAAQV,GACdO,EAAS,MAUH,sBACA,wBAAQN,QAAS,kBAAMK,GAAY,IAAnC,uBAIJ,wBAAQE,MAAO,CAAEC,UAAW,QAAUR,QAxB5B,kBAAMK,GAAY,IAwB5B,4B,0BCxBO,SAASK,EAAKnB,GAC3B,IAAMoB,EAAKC,cACXC,QAAQC,IAAIvB,GAFsB,MAGRC,mBAAS,IAHD,mBAG3BuB,EAH2B,KAGpBC,EAHoB,KAUlC,OACE,sBAAKrB,UAAU,gBAAf,UACE,8BAAMJ,EAAME,QACXsB,EAAME,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,IAAD,CAAoBC,UAAWT,EAAIQ,MAAOA,EAA1C,SACG,SAACE,GAAD,OACC,qEACMA,EAASC,gBACTD,EAASE,iBAFf,IAGEC,IAAKH,EAASI,SACd9B,UAAU,SACV+B,IAAKd,gBACJM,EACAG,EAASM,eATAhB,MAclB,cAACR,EAAD,CAASM,QAxBG,SAACV,GACXA,IACFiB,EAAS,GAAD,mBAAKD,GAAL,CAAYhB,KACpBc,QAAQC,IAAIf,UCNH,SAAS6B,IAAW,IAAD,EACNpC,mBAAS,IADH,mBACzBqC,EADyB,KAClBC,EADkB,OAKAtC,oBAAS,GALT,mBAKzBuC,EALyB,KAKf7B,EALe,KAQhC,OACE,sBAAKP,UAAU,mBAAf,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAWqC,YAAY,SAAvB,SACG,SAACX,GAAD,OACC,cAAC,IAAMY,SAAP,2BAAoBZ,EAASa,gBAA7B,IAA6CC,IAAKd,EAASI,SAA3D,SACGI,EAAMZ,KAAI,SAACmB,GAAD,OACT,cAAC,EAAD,CAAM3C,MAAO2C,GAAWxB,0BAMlC,qBAAKjB,UAAU,gBAAf,SACGoC,EACC,cAAC,EAAD,CAAMpC,UAAU,aAAaO,YAAaA,EAAaD,QArB/C,SAACR,GACfqC,EAAS,GAAD,mBAAKD,GAAL,CAAYpC,QAsBd,wBAAQO,QAnBA,kBAAME,GAAY,IAmB1B,+BCzBKmC,MAJf,WACE,OAAO,cAAC,EAAD,KCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.4f0c78e4.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Form.css';\n\nexport default function Form(props) {\n  // console.log(props);\n  const [title, setTitle] = useState('');\n\n  function handleClick(event) {\n    props.setShowForm(false);\n  }\n\n  function handleInputChange(event) {\n    setTitle(event.target.value);\n  }\n\n  function addList() {\n    if (title) {\n      props.addList(title);\n    }\n    setTitle('');\n  }\n\n  return (\n    <div className='MyForm'>\n      <input onChange={handleInputChange} value={title} />\n      <div className='MyButtons'>\n        <button onClick={addList}>Add List</button>\n        <button onClick={handleClick}> X </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\n\nexport default function AddCard(props) {\n  const [showCard, setShowCard] = useState(false);\n  const [value, setValue] = useState('');\n\n  const onClick = () => setShowCard(true);\n\n  function handleInput(event) {\n    setValue(event.target.value);\n  }\n\n  function handleClick() {\n    if (value) {\n      props.addCard(value);\n      setValue('');\n    }\n  }\n\n  return (\n    <>\n      {showCard ? (\n        <div className='MyForm'>\n          <input style={{ marginTop: '10px' }} value={value} onChange={handleInput} />\n          <div className='MyButtons'>\n            <button onClick={handleClick}>Add Card</button>\n            <button onClick={() => setShowCard(false)}> X </button>\n          </div>\n        </div>\n      ) : (\n        <button style={{ marginTop: '10px' }} onClick={onClick}>\n          + Add a Card\n        </button>\n      )}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport AddCard from './AddCard';\nimport { nanoid } from 'nanoid';\nimport './List.css';\nimport { Draggable } from 'react-beautiful-dnd';\n\nexport default function List(props) {\n  const id = nanoid();\n  console.log(props);\n  const [cards, setCards] = useState([]);\n  const addCard = (value) => {\n    if (value) {\n      setCards([...cards, value]);\n      console.log(value);\n    }\n  };\n  return (\n    <div className='CardComponent'>\n      <div>{props.title}</div>\n      {cards.map((card, index) => (\n        <Draggable key={id} Draggable={id} index={index}>\n          {(provided) => (\n            <div\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              ref={provided.innerRef}\n              className='MyCard'\n              key={nanoid()}>\n              {card}\n              {provided.placeholder}\n            </div>\n          )}\n        </Draggable>\n      ))}\n      <AddCard addCard={addCard} />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport Form from './Form';\nimport './AddList.css';\nimport List from './List';\nimport { nanoid } from 'nanoid';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\n\nexport default function AddList() {\n  const [lists, setLists] = useState([]);\n  const addList = (title) => {\n    setLists([...lists, title]);\n  };\n  const [showForm, setShowForm] = useState(false);\n  const onClick = () => setShowForm(true);\n\n  return (\n    <div className='AddListComponent'>\n      <DragDropContext>\n        <Droppable droppableId='trello'>\n          {(provided) => (\n            <React.Fragment {...provided.droppableProps} red={provided.innerRef}>\n              {lists.map((list) => (\n                <List title={list} key={nanoid()} />\n              ))}\n            </React.Fragment>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <div className='ListComponent'>\n        {showForm ? (\n          <Form className='HiddenForm' setShowForm={setShowForm} addList={addList} />\n        ) : (\n          <button onClick={onClick}>+ Add a list</button>\n        )}\n      </div>\n    </div>\n  );\n}\n","import './App.css';\nimport AddList from './components/AddList';\n\nfunction App() {\n  return <AddList />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}